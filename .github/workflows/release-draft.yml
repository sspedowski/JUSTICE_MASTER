name: Draft Release on Tag

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

permissions:
  contents: write  # required for creating releases

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate tag format (semantic)
        id: validate
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME}"
          if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+([\-\.][A-Za-z0-9._-]+)?$ ]]; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
            echo "Tag $TAG is semantic."
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
            echo "Tag $TAG is NOT semantic; skipping release steps."
          fi

      - name: Generate release notes
        if: steps.validate.outputs.ok == 'true'
        id: notes
        uses: release-drafter/release-drafter@v6
        with:
          publish: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Collect assets (optional)
        if: steps.validate.outputs.ok == 'true'
        id: assets
        run: |
          echo "files=" >> $GITHUB_OUTPUT
          for f in \
            "MasterFile_Batch_03.pdf" \
            "02_Batches/Batch_03/MasterFile_Batch_03.pdf"
          do
            if [ -f "$f" ]; then
              echo "Found: $f"
              echo "$f" >> files.txt
            fi
          done
          if [ -f files.txt ]; then
            echo "files=$(paste -sd',' files.txt)" >> $GITHUB_OUTPUT
          fi

      - name: Create release
        if: steps.validate.outputs.ok == 'true'
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') }}
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            See CHANGELOG.md for details. If missing, auto notes below:

            ${{ steps.notes.outputs.body }}
          files: ${{ steps.assets.outputs.files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
